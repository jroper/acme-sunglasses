syntax = "proto3";

import "google/api/annotations.proto";
import "cloudstate/entity_key.proto";
import "cloudstate/eventing.proto";

package com.acme.sunglasses.users;

message User {
    string id = 1 [(.cloudstate.entity_key) = true];
    string name = 2;
    string emailAddress = 3;
    repeated string orderID = 4;
}

message GetUser {
    string id = 1 [(.cloudstate.entity_key) = true];
}

// This message intentionally matches the structure of the orders event published by the orders service.
// The order items field is not here because we're not interested in it - protobuf decoders will just ignore it.
message AddOrder {
    string userID = 1 [(.cloudstate.entity_key) = true];
    string orderID = 2;
}

service Users {
    rpc AddUser (User) returns (User) {
        option (google.api.http) = {
            post: "/user/{id}",
            body: "*"
        };
    }

    rpc GetUserDetails (GetUser) returns (User) {
        option (google.api.http) = {
            get: "/user/{id}"
        };
    }

    rpc UpdateUserOrders (AddOrder) returns (AddOrder) {
        option (.cloudstate.eventing) = {
            in: {
                topic: "orders"
            }
        };
    }
}